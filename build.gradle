plugins {
    id 'java'
    id 'application'
}

repositories {
   mavenCentral()
   flatDir {
       dirs 'lib'
   }
}

compileJava.options.encoding = 'UTF-8'

dependencies {
    compile group: 'org.boofcv', name: 'all', version: '0.23'
    compile group: 'net.sf.trove4j', name: 'trove4j', version: '3.0.3'
    compile group: 'com.google.guava', name: 'guava', version: '19.0'
    compile group: 'com.google.code.jlibav', name: 'jlibav', version: '0.2.1'
    compile group: 'commons-cli', name: 'commons-cli', version: '1.3.1'
    compile group: 'com.google.code.gson', name: 'gson', version: '1.7.2'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.5'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.5'
    compile 'com.sparkjava:spark-core:2.3'
    compile 'commons-io:commons-io:2.4'
    testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
    testCompile group: 'junit', name: 'junit-dep', version: '4.10'
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '1.9.+'
}

test {
     testLogging {
         showStandardStreams = true
     }
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
        resources {
            srcDir 'resources'
        }
    }
    test {
         java {
              srcDir 'test'
         }
        resources {
            srcDir 'testresources'
        }
    }    
}

mainClassName='org.vitrivr.cthulhu.runners.CthulhuRunner'

jar {
    manifest {
             attributes 'Main-Class': 'org.vitrivr.cthulhu.runners.CthulhuRunner'
    }
    archiveName = 'cthulhu.jar'
    from ({
         configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } 
    }) {
             exclude '*workspace*'
         }
}

task deploy(dependsOn: [build, jar])
